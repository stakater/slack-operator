name: Pull Request

on:
  pull_request:
    branches:
      - master

env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.16
  KUBERNETES_VERSION: "1.20.2"
  KIND_VERSION: "0.10.0"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.sha}}

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.50.0
        only-new-issues: false
        args: --timeout 10m

    - name: Install kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl"
        sudo install ./kubectl /usr/local/bin/ && rm kubectl
        kubectl version --short --client
        kubectl version --short --client | grep -q ${KUBERNETES_VERSION}

    - name: Install Kind
      run: |
        curl -L -o kind https://github.com/kubernetes-sigs/kind/releases/download/v${KIND_VERSION}/kind-linux-amd64
        sudo install ./kind /usr/local/bin && rm kind
        kind version
        kind version | grep -q ${KIND_VERSION}

    - name: Create Kind Cluster
      run: |
        kind create cluster

    - name: Set up Cluster
      run: |
        kubectl cluster-info
        kubectl create namespace test

    - name: Test
      run: make test OPERATOR_NAMESPACE=test USE_EXISTING_CLUSTER=true

    - name: Generate Tag
      id: generate_tag
      run: |
        sha=${{ github.event.pull_request.head.sha }}
        tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
        echo "##[set-output name=GIT_TAG;]$(echo ${tag})"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: false
        build-args: BUILD_PARAMETERS=${{ env.BUILD_PARAMETERS }}
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.revision=${{ github.sha }}
